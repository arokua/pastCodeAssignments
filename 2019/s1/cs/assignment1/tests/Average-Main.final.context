{kind: class, spelling: "class", line: 7, column: 1}
{kind: identifier, spelling: "Main", line: 7, column: 7}
{kind: {, spelling: "{", line: 7, column: 12}
 7: class Main {
 8:     function 
        ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "function", line: 8, column: 5}
{kind: identifier, spelling: "void", line: 8, column: 14}
{kind: identifier, spelling: "main", line: 8, column: 19}
{kind: (, spelling: "(", line: 8, column: 23}
 7: class Main {
 8:     function void main() 
                           ^

token_is_in(token,identifier) returns false
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns true
{kind: ), spelling: ")", line: 8, column: 24}
{kind: {, spelling: "{", line: 8, column: 26}
{kind: identifier, spelling: "var", line: 9, column: 9}
{kind: identifier, spelling: "Array", line: 9, column: 13}
 8:     function void main() {
 9:         var Array a;
                      ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "a", line: 9, column: 19}
{kind: ;, spelling: ";", line: 9, column: 20}
{kind: identifier, spelling: "var", line: 10, column: 9}
{kind: int, spelling: "int", line: 10, column: 13}
 9:         var Array a;
 10:         var int length;
                     ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "length", line: 10, column: 17}
{kind: ;, spelling: ";", line: 10, column: 23}
{kind: identifier, spelling: "var", line: 11, column: 9}
{kind: int, spelling: "int", line: 11, column: 13}
 10:         var int length;
 11:         var int i,
                     ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "i", line: 11, column: 17}
{kind: ,, spelling: ",", line: 11, column: 18}
{kind: identifier, spelling: "sum", line: 11, column: 20}
{kind: ;, spelling: ";", line: 11, column: 23}
 12:         
 13:         let 
             ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "let", line: 13, column: 9}
{kind: identifier, spelling: "length", line: 13, column: 13}
read 25 tokens
