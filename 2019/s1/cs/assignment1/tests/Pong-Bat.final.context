{kind: eol_comment, spelling: " This file is part of www.nand2tetris.org", line: 1, column: 1}
{kind: eol_comment, spelling: " and the book "The Elements of Computing Systems"", line: 2, column: 1}
{kind: eol_comment, spelling: " by Nisan and Schocken, MIT Press.", line: 3, column: 1}
 3: // by Nisan and Schocken, MIT Press.
 4: // File name: projects/11/Pong/Bat.jack.
    ^

token_is_in(token,identifier) returns false
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: eol_comment, spelling: " File name: projects/11/Pong/Bat.jack.", line: 4, column: 1}
{kind: adhoc_comment, spelling: "*
 * A graphic Pong bat. Has a screen location, width and height.
 * Has methods for drawing, erasing, moving left and right on
 * the screen and changing the width. 
 ", line: 6, column: 1}
{kind: class, spelling: "class", line: 11, column: 1}
{kind: identifier, spelling: "Bat", line: 11, column: 7}
 10:  */
 11: class Bat {
               ^

token_is_in(token,identifier) returns false
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns true
{kind: {, spelling: "{", line: 11, column: 11}
{kind: eol_comment, spelling: " The screen location", line: 13, column: 5}
{kind: identifier, spelling: "field", line: 14, column: 5}
{kind: int, spelling: "int", line: 14, column: 11}
 13:     // The screen location
 14:     field int x,
                   ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "x", line: 14, column: 15}
{kind: ,, spelling: ",", line: 14, column: 16}
{kind: identifier, spelling: "y", line: 14, column: 18}
{kind: ;, spelling: ";", line: 14, column: 19}
 15: 
 16:     // The width and height
         ^

token_is_in(token,identifier) returns false
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: eol_comment, spelling: " The width and height", line: 16, column: 5}
{kind: identifier, spelling: "field", line: 17, column: 5}
{kind: int, spelling: "int", line: 17, column: 11}
{kind: identifier, spelling: "width", line: 17, column: 15}
 16:     // The width and height
 17:     field int width, 
                        ^

token_is_in(token,identifier) returns false
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns true
{kind: ,, spelling: ",", line: 17, column: 20}
{kind: identifier, spelling: "height", line: 17, column: 22}
{kind: ;, spelling: ";", line: 17, column: 28}
{kind: eol_comment, spelling: " The direction of the bat's movement", line: 19, column: 5}
 19:     // The direction of the bat's movement
 20:     field 
         ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "field", line: 20, column: 5}
{kind: int, spelling: "int", line: 20, column: 11}
{kind: identifier, spelling: "direction", line: 20, column: 15}
{kind: ;, spelling: ";", line: 20, column: 24}
 19:     // The direction of the bat's movement
 20:     field int direction; // 1 = left, 2 = right
                              ^

token_is_in(token,identifier) returns false
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: eol_comment, spelling: " 1 = left, 2 = right", line: 20, column: 26}
{kind: adhoc_comment, spelling: "* Constructs a new bat with the given location and width. ", line: 22, column: 5}
{kind: identifier, spelling: "constructor", line: 23, column: 5}
{kind: identifier, spelling: "Bat", line: 23, column: 17}
 22:     /** Constructs a new bat with the given location and width. */
 23:     constructor Bat new(
                         ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "new", line: 23, column: 21}
{kind: (, spelling: "(", line: 23, column: 24}
{kind: int, spelling: "int", line: 23, column: 25}
{kind: identifier, spelling: "Ax", line: 23, column: 29}
 22:     /** Constructs a new bat with the given location and width. */
 23:     constructor Bat new(int Ax, 
                                   ^

token_is_in(token,identifier) returns false
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns true
{kind: ,, spelling: ",", line: 23, column: 31}
{kind: int, spelling: "int", line: 23, column: 33}
{kind: identifier, spelling: "Ay", line: 23, column: 37}
{kind: ,, spelling: ",", line: 23, column: 39}
 22:     /** Constructs a new bat with the given location and width. */
 23:     constructor Bat new(int Ax, int Ay, int 
                                             ^

token_is_in(token,identifier) returns false
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns true
token_is_in(token,symbol) returns false
{kind: int, spelling: "int", line: 23, column: 41}
{kind: identifier, spelling: "Awidth", line: 23, column: 45}
{kind: ,, spelling: ",", line: 23, column: 51}
{kind: int, spelling: "int", line: 23, column: 53}
 22:     /** Constructs a new bat with the given location and width. */
 23:     constructor Bat new(int Ax, int Ay, int Awidth, int Aheight)
                                                             ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "Aheight", line: 23, column: 57}
{kind: ), spelling: ")", line: 23, column: 64}
{kind: {, spelling: "{", line: 23, column: 66}
{kind: identifier, spelling: "let", line: 24, column: 9}
 23:     constructor Bat new(int Ax, int Ay, int Awidth, int Aheight) {
 24:         let x 
                 ^

token_is_in(token,identifier) returns true
token_is_in(token,integer) returns false
token_is_in(token,double) returns false
token_is_in(token,keyword) returns false
token_is_in(token,symbol) returns false
{kind: identifier, spelling: "x", line: 24, column: 13}
read 48 tokens
