{kind: identifier, spelling: "class"}
{kind: identifier, spelling: "Main"}
{kind: {, spelling: "{"}
{kind: identifier, spelling: "function"}
{kind: identifier, spelling: "void"}
{kind: identifier, spelling: "main"}
{kind: (, spelling: "("}
{kind: ), spelling: ")"}
{kind: {, spelling: "{"}
{kind: var, spelling: "var"}
{kind: identifier, spelling: "int"}
{kind: identifier, spelling: "result"}
{kind: ,, spelling: ","}
{kind: identifier, spelling: "value"}
{kind: ;, spelling: ";"}
{kind: identifier, spelling: "do"}
{kind: identifier, spelling: "Main"}
{kind: ., spelling: "."}
{kind: identifier, spelling: "fillMemory"}
{kind: (, spelling: "("}
{kind: integer, spelling: "8001"}
{kind: ,, spelling: ","}
{kind: integer, spelling: "16"}
{kind: ,, spelling: ","}
{kind: -, spelling: "-"}
{kind: integer, spelling: "1"}
{kind: ), spelling: ")"}
{kind: ;, spelling: ";"}
{kind: let, spelling: "let"}
{kind: identifier, spelling: "value"}
{kind: =, spelling: "="}
{kind: identifier, spelling: "Memory"}
{kind: ., spelling: "."}
{kind: identifier, spelling: "peek"}
{kind: (, spelling: "("}
{kind: integer, spelling: "8000"}
{kind: ), spelling: ")"}
{kind: ;, spelling: ";"}
{kind: identifier, spelling: "do"}
{kind: identifier, spelling: "Main"}
{kind: ., spelling: "."}
{kind: identifier, spelling: "convert"}
{kind: (, spelling: "("}
{kind: identifier, spelling: "value"}
{kind: ), spelling: ")"}
{kind: ;, spelling: ";"}
{kind: identifier, spelling: "return"}
{kind: ;, spelling: ";"}
{kind: }, spelling: "}"}
{kind: identifier, spelling: "function"}
{kind: identifier, spelling: "void"}
{kind: identifier, spelling: "convert"}
{kind: (, spelling: "("}
{kind: identifier, spelling: "int"}
{kind: identifier, spelling: "value"}
{kind: ), spelling: ")"}
{kind: {, spelling: "{"}
{kind: var, spelling: "var"}
{kind: identifier, spelling: "int"}
{kind: identifier, spelling: "mask"}
{kind: ,, spelling: ","}
{kind: identifier, spelling: "position"}
{kind: ;, spelling: ";"}
{kind: var, spelling: "var"}
{kind: identifier, spelling: "boolean"}
{kind: identifier, spelling: "loop"}
{kind: ;, spelling: ";"}
{kind: let, spelling: "let"}
{kind: identifier, spelling: "loop"}
{kind: =, spelling: "="}
{kind: identifier, spelling: "true"}
{kind: ;, spelling: ";"}
{kind: while, spelling: "while"}
{kind: (, spelling: "("}
{kind: identifier, spelling: "loop"}
{kind: ), spelling: ")"}
{kind: {, spelling: "{"}
{kind: let, spelling: "let"}
{kind: identifier, spelling: "position"}
{kind: =, spelling: "="}
{kind: identifier, spelling: "position"}
{kind: +, spelling: "+"}
{kind: integer, spelling: "1"}
{kind: ;, spelling: ";"}
{kind: let, spelling: "let"}
{kind: identifier, spelling: "mask"}
{kind: =, spelling: "="}
{kind: identifier, spelling: "Main"}
{kind: ., spelling: "."}
{kind: identifier, spelling: "nextMask"}
{kind: (, spelling: "("}
{kind: identifier, spelling: "mask"}
{kind: ), spelling: ")"}
{kind: ;, spelling: ";"}
{kind: identifier, spelling: "do"}
{kind: identifier, spelling: "Memory"}
{kind: ., spelling: "."}
{kind: identifier, spelling: "poke"}
{kind: (, spelling: "("}
{kind: integer, spelling: "9000"}
{kind: +, spelling: "+"}
{kind: identifier, spelling: "position"}
{kind: ,, spelling: ","}
{kind: identifier, spelling: "mask"}
{kind: ), spelling: ")"}
{kind: ;, spelling: ";"}
{kind: if, spelling: "if"}
{kind: (, spelling: "("}
read 108 tokens
